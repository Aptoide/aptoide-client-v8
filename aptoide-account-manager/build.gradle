apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
  jvmArgs '-noverify'
}

android {
  compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion project.MINIMUM_SDK_VERSION
  }

  lintOptions {
    abortOnError false
  }

  publishNonDefault true

  productFlavors {
    prod {}
    internal {}
  }

  buildTypes {
    release {
      minifyEnabled false
      shrinkResources false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/LGPL2.1'
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {

  testCompile "junit:junit:${JUNIT_VERSION}"
  testCompile "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"

  internalCompile project(path: ':dataprovider', configuration: 'internalRelease')
  prodCompile project(path: ':dataprovider', configuration: 'prodRelease')

  compile "com.jakewharton.rxrelay:rxrelay:${RX_RELAY}"
  compile "io.reactivex:rxjava:${RXJAVA_VERSION}"
  compile "nl.littlerobots.rxlint:rxlint:${Rx_lint_version}"
  compile "com.artemzin.rxjava:proguard-rules:${RXJAVA_PROGUARD_RULES_VERSION}"
}
