apply plugin: 'com.android.library'

android {
  compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)

  defaultConfig {
    minSdkVersion project.LIB_MINIMUM_SDK_VERSION
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
    }
    release {
      minifyEnabled false
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/LGPL2.1'
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(path: ':utils')
  api project(path: ':aptoide-analytics-default-implementation')
  androidTestImplementation "androidx.test.espresso:espresso-core:${TestLibraryVersionOldModules.ESPRESSO}"
  testImplementation "junit:junit:${TestLibraryVersionOldModules.JUNIT}"
  implementation "io.reactivex:rxjava:${LibraryVersionOldModules.RXJAVA}"
  implementation "io.reactivex:rxandroid:${LibraryVersionOldModules.RXJAVA_ANDROID}"
  implementation "nl.littlerobots.rxlint:rxlint:${LibraryVersionOldModules.RX_LINT}"
  // And ProGuard rules for RxJava!
  implementation "com.artemzin.rxjava:proguard-rules:${LibraryVersionOldModules.RXJAVA_PROGUARD_RULES}"
}
