apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
  jvmArgs '-noverify'
}

android {
  compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion project.LIB_MINIMUM_SDK_VERSION
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    debug {
      minifyEnabled false
      shrinkResources false
    }
    release {
      minifyEnabled false
    }
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/LGPL2.1'
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation project(path: ':utils')
  api project(path: ':aptoide-analytics-default-implementation')
  androidTestImplementation("com.android.support.test.espresso:espresso-core:3.0.2", {
    exclude group: 'com.android.support', module: 'support-annotations' })
  testImplementation "junit:junit:4.12"
  implementation "nl.littlerobots.rxlint:rxlint:${RX_LINT_VERSION}"
  // implementation "io.reactivex.rxjava2:rxjava:${RXJAVA2_VERSION}"
  implementation "io.reactivex:rxjava:${RXJAVA_VERSION}"
  // implementation "io.reactivex.rxjava2:rxandroid:${RXANDROID_VERSION}"
  implementation "io.reactivex:rxandroid:${RXANDROID_VERSION}"
  // And ProGuard rules for RxJava!
  implementation "com.artemzin.rxjava:proguard-rules:${RXJAVA_PROGUARD_RULES_VERSION}"
}
